#!/bin/bash

# This script migrates all Git LFS (Large File Storage) files to normal Git files,
# uninstalls Git LFS, and removes the .gitattributes file from the Git history
# using filter-repo. It is designed to completely uninstall Git LFS from a repository.

# Usage:
#   ./script.sh [-h] [-v | --verbose] [-k | --kill] [-m | --max-memory-usage <percentage>]
#
# Options:
#   -h                Display this help and exit.
#   -v, --verbose     Enable verbose output. By default, only progress and memory usage
#                     are displayed.
#   -k, --kill        Stop the script if memory usage exceeds the maximum percentage (default: 95%).
#   -m, --max-memory-usage <percentage>
#                     Set the maximum memory usage percentage threshold for the --kill option.

# Define colors for output
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
NC="\033[0m" # No Color

# Functions to control verbose mode
VERBOSE=false
KILL=false
MAX_MEMORY_USAGE=95
log() {
    if [ "$VERBOSE" = true ]; then
        echo -e "$1"
    fi
}

# Display help function
show_help() {
    grep '^#' "$0" | cut -c 3-
    exit 0
}

# Function to check memory usage
check_memory_usage() {
    mem_free=$(grep MemFree /proc/meminfo | awk '{print $2}')
    total_mem=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    mem_percent=$((100 - (mem_free * 100 / total_mem)))
    echo -en "\r${YELLOW}Memory Usage: ${mem_percent}%${NC}"

    if [ "$KILL" = true ] && [ "$mem_percent" -ge "$MAX_MEMORY_USAGE" ]; then
        echo -e "\n${RED}Memory usage exceeded $MAX_MEMORY_USAGE%. Stopping script.${NC}"
        exit 1
    fi
}

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -h)
            show_help
            ;;
        -v|--verbose)
            VERBOSE=true
            ;;
        -k|--kill)
            KILL=true
            ;;
        -m|--max-memory-usage)
            shift
            MAX_MEMORY_USAGE=$1
            ;;
        *)
            echo -e "${RED}Unknown option: $1${NC}"
            exit 1
            ;;
    esac
    shift
done

# Suppress console output unless verbose mode is enabled
if [ "$VERBOSE" != true ]; then
    exec 3>&1 4>&2
    exec 1>/dev/null 2>/dev/null
fi

# Extract LFS tracked file types from .gitattributes
TYPES=$(grep filter=lfs .gitattributes | awk '{print $1}' | sed 's/\*//g')
log "${BLUE}Tracked LFS file types: ${TYPES}${NC}"

# Loop to migrate all LFS files to normal Git files
while true; do
    # Check memory usage at the beginning of each loop
    check_memory_usage

    # Export all LFS files of the tracked types
    for type in $TYPES; do
        log "${BLUE}Exporting files of type: *${type}${NC}"
        if ! git lfs migrate export --include="*.${type}" --yes --everything --verbose; then
            echo -e "${YELLOW}Retrying export for type: *${type}...${NC}"
        fi
    done

    # Check if there are LFS files remaining
    RESULT=$(git lfs migrate info | grep "LFS")
    REMAINING_FILES=$(git lfs ls-files --all -n)
    if [ -z "$RESULT" ] && [ -z "$REMAINING_FILES" ]; then
        log "${GREEN}All files have been exported successfully.${NC}"
        break
    else
        log "${YELLOW}LFS files still remaining. Retrying...${NC}"
    fi

done

# Uninstall Git LFS
git lfs uninstall
log "${GREEN}Git LFS uninstalled.${NC}"

# Use filter-repo to remove the .gitattributes file from history
git filter-repo --force --invert-paths --path ".gitattributes"
log "${GREEN}Removed .gitattributes from the repository history.${NC}"

# Restore console output if it was suppressed
if [ "$VERBOSE" != true ]; then
    exec 1>&3 2>&4
    exec 3>&- 4>&-
fi

echo -e "${GREEN}Git LFS has been successfully uninstalled.${NC}"

# improved with ChatGPT
